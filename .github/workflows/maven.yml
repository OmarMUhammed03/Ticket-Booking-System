# This workflow will build a Java project with Maven, and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-maven

# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

name: Microservices CI

on:
  push:
    branches: [ "dev" ]
  pull_request:
    branches: [ "dev" ]

jobs:
  determine-changes:
    name: Determine Changed Services
    runs-on: ubuntu-latest
    outputs:
      services: ${{ steps.filter.outputs.changes }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Use paths-filter to find changed services
        uses: dorny/paths-filter@v3.0.2
        id: filter
        with:
          base: ${{ github.base_ref }}
          filters: |
            api-gateway:
              - 'api-gateway/**'
            auth-service:
              - 'auth-service/**'
            event-service:
              - 'event-service/**'
            booking-service:
              - 'booking-service/**'
            payment-service:
              - 'payment-service/**'
            user-service:
              - 'user-service/**'

  # This job will run in parallel for each service identified in the previous job.
  build-and-test:
    name: Build & Test ${{ matrix.service }}
    needs: determine-changes
    # Only run this job if the 'determine-changes' job found changed services
    if: ${{ needs.determine-changes.outputs.services != '[]' }}
    runs-on: ubuntu-latest

    strategy:
      fail-fast: false
      # The 'matrix' is dynamically created from the JSON array output of the previous job
      matrix:
        service: ${{ fromJson(needs.determine-changes.outputs.services) }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Start Docker Services
        uses: isbang/compose-action@v1.5.1
        with:
          compose-file: "./docker-compose.yml"
          wait-for-healthy: "true"

      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: 'temurin'
          # Cache the .m2 repository to share it with downstream jobs
          cache: maven

      - name: Install Root POM
        run: mvn -B install -N

      - name: Build and Install Common Library
        run: mvn -B install --file common-library/pom.xml

      - name: Enforce Code Style with Checkstyle
        run: mvn checkstyle:check --file ./${{ matrix.service }}/pom.xml

      - name: Build and run tests for ${{ matrix.service }}
        run: mvn -B verify --file ./${{ matrix.service }}/pom.xml
